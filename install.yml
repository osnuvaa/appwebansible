---

- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

  #Configuracion de apache, e instalacion de mysqlserver,y php
    - name: Install LAMP packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'apache2','mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]

    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        owner: "{{ app_user }}"
        mode: '0755'

    - name: Set up apache virtualHost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache

    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: disable_default
      notify: Reload Apache

  #Configuracion de MySQL
    - name: Sets the root password
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"

  #Configuracion ufw para el puerto
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

  #Pagina de informacion php e importacion del sitio
    - name: Set up PHP info page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/{{ http_host }}/info.php"
   
    - name: Ansible copy directory to the remote server
      copy:
        src: "buscar_datatable_usuario/"
        dest: "/var/www/{{ http_host }}/"

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded
 
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
